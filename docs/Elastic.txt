GET _search
{
  "query": {
    "match_all": {}
  }
}
POST /my-index/my-type/1
{
  "body" : "foo"
}

GET /

PUT /library
{
  "settings": {
    "index.number_of_shards" : 1,
    "index.number_of_replicas" :0
  }
}

#Bulk Indexing
#WHen you need to index lot of docs
POST /library/books/_bulk
{"index" :{"_id" :1 }}
{"title" : "The quick brown fox","price" :5,"colors":["red","green","blue"]}
{"index" :{"_id" :2 }}
{"title" : "The quick brown fox jumps over lazy dog","price" :15,"colors":["blue","yellow"]}
{"index" :{"_id" :3 }}
{"title" : "The quick brown fox jumps over quick dog","price" :8,"colors":["red","blue"]}
{"index" :{"_id" :4 }}
{"title" : "Brown for brown dog","price" :2,"colors":["black","yellow","blue"]}
{"index" :{"_id" :5 }}
{"title" : "Lazy dog","price" :9,"colors":["red","green","blue"]}

#Find all the documens
GET /library/books/_search

#Find all fox documents
#Results are ranked by relevance score
#https://www.elastic.co/guide/en/elasticsearch/guide/current/relevance-intro.html
GET /library/books/_search
{
  "query": {
    "match": {
      "title": "fox"
    }
  }
}

#More strict and ask for phrases
GET /library/books/_search
{
  "query": {
    "match_phrase": {
      "title": "quick dog"
    }
  }
}

#bool query
GET /library/books/_search
{
  "query": {
    "bool": {
      "must_not": [
        {
          "match": {
            "title": "lazy"
          }
        },
        {
          "match_phrase": {
            "title": "quick dog"
          }
        }
      ]
    }
  }
}

#Combinations can be boosted for different effects
GET /library/books/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "match_phrase": {
            "title": {
              "query": "quick dog"
            }
          } 
        },
        {
          "match_phrase": {
            "title": {
              "query": "lazy dog",
              "boost" : 3
            }
          }
        }
      ]
      
      
    }
  }
}



#Highlight the match
GET /library/books/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "match_phrase": {
            "title": {
              "query": "quick dog",
              "boost" : 2
            }
          } 
        },
        {
          "match_phrase": {
            "title": {
              "query": "lazy dog"
              
            }
          }
        }
      ]
    }
  },
  "highlight": {
    "fields": {
      "title": {}
    }
  }
}

#filtering is faster than queryin
GET /library/books/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "title": "dog"
          }
        }
      ],
      "filter": {
        "range": {
          "price": {
            "gte": 5,
            "lte": 20
          }
        }
      }
    }
  }
}

#aggregartion can be used to explore your data
GET /library/_search
{
   "size": 0,
   "aggs": {
     "popular-colors": {
       "terms": {
         "field": "colors.keyword"
       }
     }
   }
}

#search and aggregate
GET /library/_search
{
  "query": {
    "match": {
      "title": "dog"
    }
  }, 
   "aggs": {
     "popular-colors": {
       "terms": {
         "field": "colors.keyword"
       }
     }
   }
}

#multiple aggrageations can be calculated at once and can perform calculations
GET /library/_search
{
  "size": 0,
  "aggs": {
    "price-statistics": {
      "stats": {
        "field": "price"
      }
    },
    "popular-colors" : {
      "terms": {
        "field": "colors.keyword"
      },
      "aggs": {
        "avg-price-per-color": {
          "avg": {
            "field": "price"
          }
        }
      }
    }
  }
}











